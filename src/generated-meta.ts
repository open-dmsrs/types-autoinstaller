// This file is generated by `vscode-ext-gen`. Do not modify manually.
// @see https://github.com/antfu/vscode-ext-gen

// Meta info
export const publisher = "jvitor83"
export const name = "types-autoinstaller"
export const version = "2.4.0"
export const displayName = "Types auto installer"
export const description = "Any time you save either package.json or bower.json the types package will be installed/uninstalled automatically in the background."
export const extensionId = `${publisher}.${name}`

/**
 * Type union of all commands
 */
export type CommandKey =
  | "types.installAllDependencies"

/**
 * Commands map registed by `jvitor83.types-autoinstaller`
 */
export const commands = {
  /**
   * Types: Install definitions for all dependencies
   * @value `types.installAllDependencies`
   */
  typesInstallAllDependencies: "types.installAllDependencies",
} satisfies Record<string, CommandKey>

/**
 * Type union of all configs
 */
export type ConfigKey =
  | "types-autoinstaller.saveAsDevDependency"
  | "types-autoinstaller.useYarn"

export interface ConfigKeyTypeMap {
  "types-autoinstaller.saveAsDevDependency": boolean,
  "types-autoinstaller.useYarn": boolean,
}

export interface ConfigShorthandMap {
  saveAsDevDependency: "types-autoinstaller.saveAsDevDependency",
  useYarn: "types-autoinstaller.useYarn",
}

export interface ConfigItem<T extends keyof ConfigKeyTypeMap> {
  key: T,
  default: ConfigKeyTypeMap[T],
}


/**
 * Configs map registed by `jvitor83.types-autoinstaller`
 */
export const configs = {
  /**
   * Install @types for "dependencies" to the "devDevependencies" section of package.json
   * @key `types-autoinstaller.saveAsDevDependency`
   * @default `false`
   * @type `boolean`
   */
  saveAsDevDependency: {
    key: "types-autoinstaller.saveAsDevDependency",
    default: false,
  } as ConfigItem<"types-autoinstaller.saveAsDevDependency">,
  /**
   * Use yarn to instead of npm
   * @key `types-autoinstaller.useYarn`
   * @default `false`
   * @type `boolean`
   */
  useYarn: {
    key: "types-autoinstaller.useYarn",
    default: false,
  } as ConfigItem<"types-autoinstaller.useYarn">,
}

export interface ScopedConfigKeyTypeMap {
  "saveAsDevDependency": boolean,
  "useYarn": boolean,
}

export const scopedConfigs = {
  scope: "types-autoinstaller",
  defaults: {
    "saveAsDevDependency": false,
    "useYarn": false,
  } satisfies ScopedConfigKeyTypeMap,
}

